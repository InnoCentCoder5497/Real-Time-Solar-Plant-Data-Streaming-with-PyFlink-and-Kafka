services:
  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,DOCKER://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER://kafka:29092
    ports:
      - "9092:9092"
    networks:
      - ms-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    networks:
      - ms-net

  jobmanager:
    build:
      context: ./flink
    image: custom-flink-python:1.17
    container_name: jobmanager
    command: jobmanager
    ports:
      - "8082:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./flink-connectors:/opt/flink/user-libs/
      - ./flink-jobs/src/flink_jobs:/opt/flink/jobs/
    depends_on:
      - kafka
    networks:
      - ms-net

  taskmanager:
    image: custom-flink-python:1.17
    container_name: taskmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=16
    volumes:
      - ./flink-connectors:/opt/flink/user-libs/
      - ./flink-jobs/src/flink_jobs:/opt/flink/jobs/
    depends_on:
      - jobmanager
    networks:
      - ms-net

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: solar_data
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./pg-scripts/init-timescale.sql:/docker-entrypoint-initdb.d/init-timescale.sql
      - ./pg-scripts/schema_init.sql:/docker-entrypoint-initdb.d/schema_init.sql

    restart: unless-stopped
    networks:
      - ms-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@solar-data.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - timescaledb
    restart: unless-stopped
    networks:
      - ms-net

  grafana:
    image: grafana/grafana
    container_name: solar-grafana
    restart: unless-stopped
    user: '0'
    ports:
      - '3000:3000'
    volumes:
      - './dashboard_data:/var/lib/grafana'
    depends_on:
      - timescaledb
    networks:
      - ms-net

volumes:
  timescale_data:
    
networks:
  ms-net:
